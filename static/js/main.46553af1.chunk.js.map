{"version":3,"sources":["Game.js","Norms.js","Timer.js","App.js","reportWebVitals.js","index.js"],"names":["Game","props","base_game","game","deepcopy","length","addXToRow","undefined","state","position","movePosition","bind","pressKey","checkBounds","changeBoard","document","onkeydown","in_array","copy","index","push","row","substring","temp_board","this","row_index","col_index","new_row","setState","row_change","col_change","num_of_rows","num_of_cols","char_at_new_position","char_at_curr_position","alert","e","keyCode","className","React","Component","Norms","Timer","time_in_minutes","timer_interval","handleChange","timer","event","target","value","clearInterval","time","getElementById","innerHTML","String","distance","countDownDate","Date","now","parseInt","setInterval","minutes","Math","floor","seconds","padStart","id","type","onChange","onClick","App","to","path","component","NothingComponent","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.46553af1.chunk.js","sourcesContent":["import React from \"react\";\nimport './Game.css';\n\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const base_game = [\n      \" ________________ \\n\",\n      \"|  _  |  _____|  |\\n\",\n      \"| | | | |  ____  |\\n\",\n      \"|___|     |___ | |\\n\",\n      \"|  _   _|______| |\\n\",\n      \"|_|  _|  ________|\\n\",\n      \"____|_____________\\n\",\n    ];\n    let game = this.deepcopy(base_game);\n    game[base_game.length - 1] = this.addXToRow(game[base_game.length - 1], 0);\n\n    if (this.state === undefined || this.state.game === undefined) {\n      this.state = {\n        base_game: base_game,\n        game: game,\n        position: [base_game.length - 1, 0],\n      };\n    }\n\n    this.movePosition = this.movePosition.bind(this);\n    this.pressKey = this.pressKey.bind(this);\n    this.checkBounds = this.checkBounds.bind(this);\n    this.changeBoard = this.changeBoard.bind(this);\n    this.changeBoard();\n\n    // Move within the game\n    document.onkeydown = this.pressKey;\n  }\n\n  deepcopy(in_array) {\n    let copy = [];\n    for (let index = 0; index < in_array.length; index++) {\n      copy.push(in_array[index]);\n    }\n    return copy;\n  }\n\n  addXToRow(row, index) {\n    return row.substring(0, index) + \"x\" + row.substring(index + 1);\n  }\n\n  changeBoard() {\n    let temp_board = this.deepcopy(this.state.base_game);\n    let row_index = this.state.position[0];\n    let col_index = this.state.position[1];\n    let new_row = this.addXToRow(temp_board[row_index], col_index);\n    temp_board[row_index] = new_row;\n    this.setState({game: temp_board});\n  }\n\n  checkBounds(row_change, col_change) {\n    let num_of_rows = this.state.game.length;\n    let num_of_cols = this.state.game[0].length;\n    let row_index = this.state.position[0] + row_change;\n    let col_index = this.state.position[1] + col_change;\n\n    // Check that the indices in this.state.position are in bounds\n    if (row_index > num_of_rows - 1) {\n      return false;\n    }\n    if (row_index < 0) {\n      return false;\n    }\n    if (col_index > num_of_cols - 2) { // Exclude the '\\n' character\n      return false;\n    }\n    if (col_index < 0) {\n      return false;\n    }\n\n    // Check not running into a wall\n    let char_at_new_position = this.state.game[row_index][col_index];\n    if (char_at_new_position === \"|\") {\n      return false;\n    }\n\n    // Check not running into a floor\n    if (row_change === -1 && char_at_new_position === \"_\") { // going up\n      return false;\n    }\n    let char_at_curr_position = this.state.base_game[this.state.position[0]][this.state.position[1]];\n    if (row_change === 1 && char_at_curr_position === \"_\") {// going down\n      return false;\n    }\n\n    // Check if won the game!\n    if (row_index === num_of_rows - 1 && col_index === num_of_cols - 2) {\n      alert(\"You win! Congrats!\");\n    }\n\n    return true;\n  }\n\n  movePosition(row_change, col_change) {\n    // Check that you can move\n    if (this.checkBounds(row_change, col_change) === false) {\n      return; // Can't move\n    }\n\n    // Change the position in state\n    this.setState({\n      position:[\n        this.state.position[0] + row_change,\n        this.state.position[1] + col_change,\n      ]\n    });\n    this.changeBoard();\n  }\n\n  pressKey(e) {\n    // Move within the game\n    switch (e.keyCode) {\n      case 37:\n        // left\n        this.movePosition(0, -1);\n        break;\n      case 38:\n        // up\n        this.movePosition(-1, 0);\n        break;\n      case 39:\n        // right\n        this.movePosition(0, 1);\n        break;\n      case 40:\n        // down\n        this.movePosition(1, 0);\n        break;\n      default:\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"title\">\n        <h4 className=\"header\">Game:</h4>\n        <pre className=\"game\">{this.state.game}</pre>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport './Norms.css';\n\n\nexport default class Norms extends React.Component {\n  render() {\n    return (\n      <div className=\"title\">\n        <h4 className=\"header\">Classroom Norms:</h4>\n\n        <div className=\"norms\">\n          <ul>\n            <li>Follow NJITâ€™s code of ethics</li>\n            <li>Mute yourself</li>\n            <li>Put pronouns as part of your Zoom names</li>\n            <li>Raise hand or type in chat for questions</li>\n            <li>We strongly encourage turning on video, so you feel present in the classroom</li>\n            <li>Be respectful</li>\n            <li>7 minute break on the hour mark</li>\n          </ul>\n        </div>\n\n        <h5 className=\"header2\">After Learning Git</h5>\n\n        <div className=\"norms\">\n          <ul>\n            <li>Have the Activity cloned locally before every class so you can follow along with us</li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport './Timer.css';\n\n\nexport default class Timer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (this.state === undefined || this.state.time_in_minutes === undefined) {\n      this.state = {\n        time_in_minutes: 7,\n        timer_interval: null\n      };\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.timer = this.timer.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({time_in_minutes: event.target.value});\n  }\n\n  timer() {\n    if (this.state.timer_interval != null) {\n      clearInterval(this.state.timer_interval);\n    }\n\n    let time = this.state.time_in_minutes;\n    document.getElementById(\"timer\").innerHTML = String(time) + \":00\";\n\n    const start = Date.now();\n    const delta = parseInt(time) * 60000;  // time # of minutes\n    const countDownDate = start + delta;\n    let distance;\n\n    // Update each second\n    this.setState({\n      timer_interval: setInterval(function() {\n        // If still on the Timer page\n        if (document.getElementById(\"timer\") !== null) {\n          distance = countDownDate - Date.now();\n\n          var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n          var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n          // Set value in HTML\n          document.getElementById(\"timer\").innerHTML = String(minutes) + \":\" + String(seconds).padStart(2, \"0\");\n\n          // If the count down is finished, write some text\n          if (distance <= 0) {\n            if (this.state !== undefined) {\n              clearInterval(this.state.timer_interval);\n            }\n            document.getElementById(\"timer\").innerHTML = \"Class Time!\";\n          }\n        }\n      }, 1000)\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"title\">\n        <h2 className=\"break_timer\">Break Timer:</h2>\n\n        <label id=\"label\">\n          Time:\n          <input type=\"text\" value={this.state.time_in_minutes} onChange={this.handleChange} />\n        </label>\n        <button onClick={this.timer}>Start</button>\n\n        <h1 id=\"timer\">7:00</h1>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Game from \"./Game\";\nimport Norms from \"./Norms\";\nimport Timer from \"./Timer\";\nimport \"./App.css\";\nimport {Link, Switch,Route, BrowserRouter } from 'react-router-dom'\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <div className=\"navbar\">\n            <Link className=\"pageLink\" to=\"/timer\">Timer</Link>\n            <Link className=\"pageLink\" to=\"/norms\">Class Norms</Link>\n            <Link className=\"pageLink\" to=\"/game\">Game</Link>\n            <Link className=\"pageLink\" to=\"/nothing\">Nothing</Link>\n          </div>\n          <Switch>\n            <Route path=\"/timer\" component={Timer}/>\n            <Route path=\"/norms\" component={Norms}/>\n            <Route path=\"/game\" component={Game}/>\n            <Route path=\"/nothing\" component={NothingComponent}/>\n            <Route exact path=\"/\" component={Timer}/>\n          </Switch>\n          \n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst NothingComponent = () => {\n  return <div>Nothing</div>\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}